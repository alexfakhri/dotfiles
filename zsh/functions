# vim: set filetype=sh:

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status -sb
  fi
}

# Tab complete hosts from ~/.ssh/known_hosts
zstyle -e ':completion::*:hosts' hosts 'reply=($(sed -e "/^#/d" -e "s/ .*\$//" -e "s/,/ /g" /etc/ssh_known_hosts(N) ~/.ssh/known_hosts(N) 2>/dev/null | xargs) $(grep \^Host ~/.ssh/config(N) | cut -f2 -d\  2>/dev/null | xargs))'

function tnw() {
  tmux new-window -n $2 -c ~/$1/$2
}

function tnwp() {
  tmux new-window -n $1 -c ~/projects/carwow/$1
}

function tmux-re-ssh-agent () {
  for pane in $(tmux list-panes -a -F '#S:#W.#P'); do
    tmux send-keys -t ${pane} C-z
    tmux send-keys -t ${pane} C-e
    tmux send-keys -t ${pane} C-u
    tmux send-keys -l -t ${pane} 'srcz;re-ssh-agent;try-fg'
    tmux send-keys -t ${pane} Enter
  done
}

function re-ssh-agent() {
  if [ $(uname) = 'Darwin' ]; then
    SSH_AUTH_SOCK='/private/tmp/com.apple.launchd.*/Listeners'
  else
    SSH_AUTH_SOCK='/tmp/ssh-*/agent.*'
  fi
  export SSH_AUTH_SOCK=$(eval echo -n $SSH_AUTH_SOCK)
}

function try-fg() {
  [[ "$(jobs | wc -l)" -ne 0 ]] && fg || clear
}

function carwow() {
  for site in $CARWOW_SITES[@]; do
    (cd ~/projects/carwow/$site && __carwow_start_site &)
  done
}

function __carwow_start_site() {
  git diff-index --quiet HEAD
  if [ $? -eq 0 ]; then
    git checkout master
    git pull origin master
  else
    echo "WARNING: could not reset `basename $(pwd)` to origin master - uncommitted changes"
  fi

  bundle check || bundle install 2>&1 > /dev/null
  start-puma

  bundle exec rake db:migrate 2>&1 > /dev/null
}

function start-puma() {
  bundle exec puma --daemon --pidfile tmp/puma.pid > /dev/null
}

function puma-fg() {
  depuma && be puma; start-puma
}

function uncarwow() {
  pkill -f puma
}
function depuma() {
  pumactl --pidfile tmp/puma.pid stop
}
