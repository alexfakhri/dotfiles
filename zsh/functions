# vim: set filetype=sh:

function g {
  if [[ $# > 0 ]]; then
    git $@
  else
    git status -sb
  fi
}

# Tab complete hosts from ~/.ssh/known_hosts
zstyle -e ':completion::*:hosts' hosts 'reply=($(sed -e "/^#/d" -e "s/ .*\$//" -e "s/,/ /g" /etc/ssh_known_hosts(N) ~/.ssh/known_hosts(N) 2>/dev/null | xargs) $(grep \^Host ~/.ssh/config(N) | cut -f2 -d\  2>/dev/null | xargs))'

function tnw() {
  tmux new-window -n $2 -c ~/$1/$2
}

function tnwp() {
  tnw carwow $1
}

function try-fg() {
  [[ "$(jobs | wc -l)" -ne 0 ]] && fg || clear
}

function carwow() {
  wait-for-docker

  for site in $CARWOW_SITES[@]; do
    (cd ~/carwow/$site && __carwow_start_site) &
  done

  wait
}

function __carwow_start_site() {
  git diff-index --quiet HEAD
  if [ $? -eq 0 ]; then
    git checkout --quiet master
    git pull origin --quiet master
  else
    echo "WARNING: could not reset `basename $(pwd)` to origin master - uncommitted changes"
  fi

  [[ -f yarn.lock ]] && yarn 2>&1 > /dev/null || true
  [[ -f Gemfile ]] && { bundle check || bundle install } 2>&1 > /dev/null || true
  [[ -f config/puma.rb ]] && start-puma 2>&1 > /dev/null || true

  [[ -d db ]] && [[ -f Gemfile ]] && bundle exec rake db:migrate 2>&1 > /dev/null || true

  git remote prune origin > /dev/null
}

function start-puma() {
  mkdir -p tmp
  bundle exec puma --daemon --pidfile tmp/puma.pid 2>&1 > /dev/null
}

function restart-puma() {
  depuma && start-puma && say "restarted $(basename $(pwd))"
}

function puma-fg() {
  depuma && be puma; start-puma
}

function uncarwow() {
  pkill -f puma
}
function depuma() {
  pumactl --pidfile tmp/puma.pid stop
}

function plist() {
  pgrep -f "$1" | xargs ps
}

function site-psql() {
  psql -d "carwow_$(basename `pwd`)_development"
}

function wait-for-psql() {
  echo -n 'Waiting for Postgres'
  until psql -c 'select 1;' > /dev/null 2>&1; do
    echo -n '.'
    sleep 0.2
  done
  echo
}

function wait-for-docker() {
  echo -n 'Waiting for Docker'
  until docker ps > /dev/null 2>&1; do
    echo -n '.'
    sleep 0.2
  done
  echo
}

# carwow aliases
function huk() {
  heroku "$@" --remote uk
}
function hde() {
  heroku "$@" --remote de
}
function hfr() {
  heroku "$@" --remote fr
}
function hes() {
  heroku "$@" --remote es
}
